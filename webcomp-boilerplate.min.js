(()=>{"use strict";var t={494:(t,e,n)=>{t.exports=n.p+"b88d04fba731603756b1.css"}},e={};function n(s){var o=e[s];if(void 0!==o)return o.exports;var i=e[s]={exports:{}};return t[s](i,i.exports,n),i.exports}n.m=t,n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var t;n.g.importScripts&&(t=n.g.location+"");var e=n.g.document;if(!t&&e&&(e.currentScript&&(t=e.currentScript.src),!t)){var s=e.getElementsByTagName("script");s.length&&(t=s[s.length-1].src)}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=t})(),n.b=document.baseURI||self.location.href,(()=>{class t extends HTMLElement{constructor(){super()}static get observedAttributes(){return["points"]}attributeChangedCallback(t,e,n){"points"===t&&this.render()}set points(t){this.setAttribute("points",t)}get points(){return this.getAttribute("points")}connectedCallback(){this.render()}render(){this.innerHTML=`\n            <svg width="80" height="80" viewBox="0 0 100 100">\n                <polygon points="${this.points||""}" fill="#871929" stroke="none"/>\n            </svg>\n        `}}function e(){const t=Math.floor(8*Math.random())+3,e=[];for(let n=0;n<t;n++){const s=n/t*2*Math.PI,o=40*(.6+.4*Math.random()),i=50+o*Math.cos(s),r=50+o*Math.sin(s);e.push(`${i},${r}`)}return e.join(" ")}function s(t){const e=document.createElement("polygon-item");return e.points=t,e}customElements.define("polygon-item",t);const o="polygon-manager-data";class i extends HTMLElement{constructor(){var t;super(),this.workZoneScale=1,this.workZoneTranslateX=0,this.workZoneTranslateY=0,this.isDragging=!1,this.isPanning=!1,this.isMovingInWorkzone=!1,this.activeDragElement=null,this.initialYPositioning=void 0,this.maxPolygons=12,this.dragStartMouseX=0,this.dragStartMouseY=0,this.isDraggingGlobal=!1,(t=this).setupDragAndDrop=function(e){e.setAttribute("draggable","true"),e.addEventListener("dragstart",(n=>{t.isDraggingGlobal=!0,t.activeDragElement=e,n.dataTransfer.setData("text/plain",""),setTimeout((()=>e.classList.add("dragging")),0)})),e.addEventListener("dragend",(()=>{t.isDraggingGlobal=!1,e&&e.classList.remove("dragging")}));const n=t.querySelector("#work-zone"),s=t.querySelector("#work-zone-content");n.addEventListener("dragover",(e=>{t.isDraggingGlobal&&e.preventDefault()})),n.addEventListener("drop",(e=>{if(!t.activeDragElement)return;const o=n.getBoundingClientRect(),i=e.clientX-o.left,r=e.clientY-o.top,a=t.workZoneScale,l=(i-t.workZoneTranslateX)/a,h=(r-t.workZoneTranslateY)/a,d=t.activeDragElement;d.style.position="absolute",d.style.left=`${l}px`,d.style.top=`${h}px`,s.appendChild(d),d.classList.remove("dragging"),t.activeDragElement=null,t.isDraggingGlobal=!1}))}}connectedCallback(){this.render(),this.setupEventListeners(),this.loadPolygons(),setTimeout((()=>this.updateRulers()),50)}disconnectedCallback(){this.removeEventListeners()}$(t){return this.querySelector(t)}setupEventListeners(){this.$("#create-button").addEventListener("click",(()=>this.createPolygons())),this.$("#save-button").addEventListener("click",(()=>this.handleSave())),this.$("#reset-button").addEventListener("click",(()=>this.handleReset()));const t=this.$("#work-zone");t.addEventListener("wheel",this.handleZoom.bind(this)),t.addEventListener("mousedown",this.handlePanStart.bind(this)),t.addEventListener("mousemove",this.handlePanMove.bind(this)),t.addEventListener("mouseup",this.handlePanEnd.bind(this)),t.addEventListener("mouseleave",this.handlePanEnd.bind(this)),window.addEventListener("mouseup",this.handlePanEnd.bind(this))}removeEventListeners(){const t=this.$("#work-zone");t&&(t.removeEventListener("wheel",this.handleZoom.bind(this)),t.removeEventListener("mousedown",this.handlePanStart.bind(this)),t.removeEventListener("mousemove",this.handlePanMove.bind(this)),t.removeEventListener("mouseup",this.handlePanEnd.bind(this)),t.removeEventListener("mouseleave",this.handlePanEnd.bind(this))),window.removeEventListener("mouseup",this.handlePanEnd.bind(this))}handleSave(){!function(t,e,n,s,i){const r={bufferPolygons:[],workPolygons:[],workZoneTransform:{scale:n,translateX:s,translateY:i}};t.querySelectorAll("polygon-item").forEach((t=>{r.bufferPolygons.push({points:t.points})})),e.querySelectorAll("polygon-item").forEach((t=>{r.workPolygons.push({points:t.points,left:t.style.left,top:t.style.top})})),localStorage.setItem(o,JSON.stringify(r))}(this.$("#buffer-zone"),this.$("#work-zone-content"),this.workZoneScale,this.workZoneTranslateX,this.workZoneTranslateY),alert("Полигоны сохранены")}handleReset(){localStorage.removeItem(o),this.$("#buffer-zone").innerHTML="",this.$("#work-zone-content").innerHTML="",alert("Полигоны удалены")}loadPolygons(){const t=function(){const t=localStorage.getItem(o);return t?JSON.parse(t):null}();if(!t)return;const e=this.$("#buffer-zone"),n=this.$("#work-zone-content");t.bufferPolygons.forEach((t=>{const n=s(t.points);e.appendChild(n),this.setupDragAndDrop(n)})),t.workPolygons.forEach((t=>{const e=s(t.points);e.style.position="absolute",e.style.left=t.left,e.style.top=t.top,n.appendChild(e),this.setupDragAndDrop(e)})),t.workZoneTransform&&(this.workZoneScale=t.workZoneTransform.scale,this.workZoneTranslateX=t.workZoneTransform.translateX,this.workZoneTranslateY=t.workZoneTransform.translateY,this.updateWorkZoneTransform(),this.updateRulers())}handleZoom(t){t.preventDefault();const e=t.deltaY>0?-.1:.1,n=Math.max(.1,Math.min(5,this.workZoneScale+e)),s=this.$("#work-zone").getBoundingClientRect(),o=t.clientX-s.left,i=t.clientY-s.top;if(n!==this.workZoneScale){const t=n/this.workZoneScale;this.workZoneTranslateX=o-(o-this.workZoneTranslateX)*t,this.workZoneTranslateY=i-(i-this.workZoneTranslateY)*t,this.workZoneScale=n,this.updateWorkZoneTransform(),this.updateRulers()}}handlePanStart(t){if(0===t.button&&!this.activeDragElement){const e=t.target;if(e.closest("polygon-item")&&e.closest("#work-zone-content")){this.isMovingInWorkzone=!0,this.activeDragElement=e.closest("polygon-item");const n=this.activeDragElement.getBoundingClientRect();return this.dragOffsetX=t.clientX-n.left,this.dragOffsetY=t.clientY-n.top,this.dragStartMouseX=t.clientX,this.dragStartMouseY=t.clientY,void this.activeDragElement.classList.add("dragging")}this.isPanning=!0,this.dragStartX=t.clientX,this.dragStartY=t.clientY,this.panStartTranslateX=this.workZoneTranslateX,this.panStartTranslateY=this.workZoneTranslateY,this.$("#work-zone").style.cursor="grabbing"}}handlePanMove(t){if(this.isPanning){const e=t.clientX-this.dragStartX,n=t.clientY-this.dragStartY;this.workZoneTranslateX=this.panStartTranslateX+e,this.workZoneTranslateY=this.panStartTranslateY+n,this.updateWorkZoneTransform(),this.updateRulers()}}handlePanEnd(){this.isPanning&&(this.isPanning=!1,this.$("#work-zone").style.cursor="grab")}updateWorkZoneTransform(){this.$("#work-zone-content").style.transform=`translate(${this.workZoneTranslateX}px, ${this.workZoneTranslateY}px) scale(${this.workZoneScale})`,this.updateGridSize()}updateGridSize(){const t=this.$("#work-zone"),e=50*this.workZoneScale;t.style.backgroundSize=`${e}px ${e}px`,t.style.backgroundPosition=`${this.workZoneTranslateX}px ${this.workZoneTranslateY}px`}updateRulers(){const t=this.$("#work-zone"),e=t.clientWidth,n=t.clientHeight;!function(t,e,n,s,o,i){t.innerHTML="";const r=10*Math.floor(-e/(5*n)/10),a=10*Math.ceil((i-e)/(5*n)/10);for(let s=r;s<=a;s+=10){const o=s*n*5+e;if(o>=0&&o<=i){const e=document.createElement("div");e.className="ruler-tick",e.style.left=`${o}px`,e.style.top="2px",e.innerHTML=`<span>${s}</span>`,t.appendChild(e)}}}(this.$("#x-ruler"),this.workZoneTranslateX,this.workZoneScale,0,0,e),void 0===this.initialYPositioning&&(this.initialYPositioning=!0,this.workZoneTranslateY=320,this.updateWorkZoneTransform()),function(t,e,n,s,o,i){t.innerHTML="";const r=10*Math.floor(-e/(5*n)/10),a=10*Math.ceil((i-e)/(5*n)/10);for(let s=r;s<=a;s+=10){const o=s*n*5+e;if(o>=0&&o<=i){const e=document.createElement("div");e.className="ruler-tick",e.style.top=`${o}px`,e.innerHTML=`<span>${-1*s}</span>`,t.appendChild(e)}}}(this.$("#y-ruler"),this.workZoneTranslateY,this.workZoneScale,0,0,n)}createPolygons(){const t=this.$("#buffer-zone"),n=t.querySelectorAll("polygon-item").length;if(n>=this.maxPolygons)return;const o=this.maxPolygons-n,i=Math.min(o,Math.floor(8*Math.random())+5);for(let n=0;n<i;n++){const n=s(e());t.appendChild(n),this.setupDragAndDrop(n)}}render(){this.innerHTML=`\n            <link rel="stylesheet" href="${new URL(n(494),n.b).href}">\n            <div class="container">\n                <div class="controls">\n                    <div class="left-buttons">\n                        <button id="create-button">Создать</button>\n                    </div>\n                    <div class="right-buttons">\n                        <button id="save-button">Сохранить</button>\n                        <button id="reset-button">Сбросить</button>\n                    </div>\n                </div>\n                <div class="spacer"></div>\n                <div id="buffer-zone" class="buffer-zone"></div>\n                <div class="spacer"></div>\n                <div class="work-zone-container">\n                    <div id="y-ruler" class="y-ruler"></div>\n                    <div id="work-zone" class="work-zone">\n                        <div id="work-zone-content" class="work-zone-content"></div>\n                    </div>\n                    <div id="x-ruler" class="x-ruler"></div>\n                </div>\n            </div>\n        `,this.updateRulers(),this.updateGridSize()}}customElements.define("polygon-manager",i);const r=i;customElements.define("polygon-manager",r)})()})();